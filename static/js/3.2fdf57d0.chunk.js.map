{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Name/Name.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Name/Name.jsx","components/Dialogs/Name/NameContainer.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/MessageContainer.jsx","components/Dialogs/Dialogs.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","compose","connect","props","to","module","exports","Name","DialogItem","path","id","className","s","dialogsItem","active","activeClassName","dialogsItemLink","name","nameElements","map","n","imgElements","img","imgItems","src","dialogsItems","NameContainer","dialogsPage","nameData","imgData","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Message","MessageItem","message","messageElements","m","messages","values","addMessage","newMessageText","messageData","Dialogs","dialogs","MessageContainer"],"mappings":"mLAIMA,EAA0B,SAACC,GAAD,MAAY,CACxCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAK7B,OAAOC,YAAQC,YAAQP,GAAhBM,EAJmB,SAACE,GACvB,OAAIA,EAAMN,OACH,cAACG,EAAD,eAAeG,IADG,cAAC,IAAD,CAAUC,GAAI,gB,oBCT/CC,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,aAAe,2BAA2B,SAAW,uBAAuB,YAAc,0BAA0B,OAAS,qBAAqB,gBAAkB,gC,oBCAtLD,EAAOC,QAAU,CAAC,SAAW,4B,8GC8BdC,EA1BF,SAACJ,GAEV,IAAMK,EAAa,SAACL,GAChB,IAAIM,EAAO,YAAcN,EAAMO,GAC/B,OACI,qBAAKC,UAAS,UAAKC,IAAEC,YAAP,YAAsBD,IAAEE,QAAtC,SACI,cAAC,IAAD,CAASC,gBAAiBH,IAAEI,gBAAiBZ,GAAIK,EAAjD,SAAwDN,EAAMc,UAKtEC,EAAef,EAAMc,KAAKE,KAAI,SAACC,GAC/B,OAAO,cAACZ,EAAD,CAAYS,KAAMG,EAAEH,KAAMP,GAAIU,EAAEV,IAASU,EAAEV,OAGlDW,EAAclB,EAAMmB,IAAIH,KAAI,SAACC,GAC7B,OAAO,qBAAKT,UAAWC,IAAEW,SAAUC,IAAKJ,EAAEE,IAAKZ,GAAIU,EAAEV,QAGzD,OACI,sBAAKC,UAAWC,IAAEa,aAAlB,UACI,8BAAMJ,IACN,8BAAMH,QCdHQ,EAFOxB,aAPA,SAACN,GACnB,MAAO,CACHqB,KAAMrB,EAAM+B,YAAYC,SACxBN,IAAK1B,EAAM+B,YAAYE,WAIT3B,CAAyBK,G,6DCkBzCuB,EAAcC,YAAiB,IAc/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAAC9B,GACpB,OACI,uBAAMgC,SAAUhC,EAAMiC,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,YAAY,aAAarB,KAAK,iBAAiBsB,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,OAEpG,8BACI,yDAQDa,EAtCC,SAACxC,GACb,IAAMyC,EAAc,SAACzC,GACjB,OACI,8BAAMA,EAAM0C,WAIhBC,EAAkB3C,EAAM0C,QAAQ1B,KAAI,SAAC4B,GACrC,OAAO,cAACH,EAAD,CAAaC,QAASE,EAAEF,SAAcE,EAAErC,OAOnD,OACI,sBAAKC,UAAWC,IAAEoC,SAAlB,UACKF,EACD,cAACd,EAAD,CAAqBG,SAPT,SAACc,GACjB9C,EAAM+C,WAAWD,EAAOE,uB,gBCNjBlD,cACXC,aAPkB,SAACN,GACnB,MAAO,CACHiD,QAASjD,EAAM+B,YAAYyB,eAKN,CAAEF,iBAC3BnD,IAFWE,CAGb0C,GCHaU,UARC,WACZ,OACI,sBAAK1C,UAAWC,IAAE0C,QAAlB,UACI,cAAC,EAAD,IACA,cAACC,EAAD","file":"static/js/3.2fdf57d0.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if(!props.isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    return compose(connect(mapStateToPropsRedirect))(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Xw-uR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"Name_dialogsItems__WYWr3\",\"imgItems\":\"Name_imgItems__2dN1F\",\"dialogsItem\":\"Name_dialogsItem__3VWfD\",\"active\":\"Name_active__2Z1X8\",\"dialogsItemLink\":\"Name_dialogsItemLink__3C63q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__3t_Ki\"};","import s from './Name.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nconst Name = (props) => {\r\n\r\n    const DialogItem = (props) => {\r\n        let path = '/dialogs/' + props.id;\r\n        return (\r\n            <div className={`${s.dialogsItem} ${s.active}`}>\r\n                <NavLink activeClassName={s.dialogsItemLink} to={path}>{props.name}</NavLink>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let nameElements = props.name.map((n) => {\r\n        return <DialogItem name={n.name} id={n.id} key={n.id}/>\r\n    });\r\n\r\n    let imgElements = props.img.map((n) => {\r\n        return <img className={s.imgItems} src={n.img} id={n.id}/>\r\n    });\r\n\r\n    return (\r\n        <div className={s.dialogsItems}>\r\n            <div>{imgElements}</div>\r\n            <div>{nameElements}</div>\r\n        </div>\r\n    );\r\n}\r\nexport default Name;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Name from \"./Name\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        name: state.dialogsPage.nameData,\r\n        img: state.dialogsPage.imgData\r\n    }\r\n};\r\n\r\nconst NameContainer = connect(mapStateToProps)(Name);\r\n\r\nexport default NameContainer;","import s from './Message.module.css';\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from '../../common/FormsControls/FormsControls'\r\n\r\n\r\nconst Message = (props) => {\r\n    const MessageItem = (props) => {\r\n        return (\r\n            <div>{props.message}</div>\r\n        );\r\n    }\r\n\r\n    let messageElements = props.message.map((m) => {\r\n        return <MessageItem message={m.message} key={m.id}/>\r\n    });\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.messages}>\r\n            {messageElements}\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n};\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='Enter text' name='newMessageText' component={Textarea} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Message;\r\n\r\n","import React from 'react';\r\nimport { addMessage } from '../../../redux/dialogs-reducer';\r\nimport Message from './Message';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        message: state.dialogsPage.messageData,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { addMessage }),\r\n    withAuthRedirect\r\n)(Message);\r\n","import s from './Dialogs.module.css'\r\nimport NameContainer from \"./Name/NameContainer\";\r\nimport MessageContainer from \"./Message/MessageContainer\";\r\n\r\n\r\nconst Dialogs = () => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <NameContainer/>\r\n            <MessageContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;"],"sourceRoot":""}