{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","compose","connect","props","to","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","onSubmit","handleSubmit","error","className","s","formSummarySubmit","descBlock","Field","placeholder","name","component","Input","type","Textarea","Object","keys","profile","contacts","map","key","ProfileInfo","src","photos","large","photoUser","mainPhoto","isOwner","target","files","length","savePhoto","formData","saveProfile","then","initialValues","goToEditMode","ProfileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","Post","item","message","likeCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","validate","required","MyPosts","postElements","post","reverse","p","id","postsBlock","addPost","newPostText","posts","MyPostContainer","profilePage","postData","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authUserId","profileData","getStatus","refreshProfile","prevProps","prevState","React","withRouter"],"mappings":"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","file":"static/js/4.c7484b75.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if(!props.isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    return compose(connect(mapStateToPropsRedirect))(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descBlock\":\"ProfileInfo_descBlock__22C1F\",\"mainInfo\":\"ProfileInfo_mainInfo__1DeQY\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3c-ia\",\"formSummarySubmit\":\"ProfileInfo_formSummarySubmit__2OMel\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3emMW\",\"posts\":\"MyPosts_posts__3Uj3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__j9HfH\"};","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode && (\r\n                <div>\r\n                    <b>Status: </b>\r\n                    <span onClick={activateEditMode}>\r\n                        {props.status || '----'}\r\n                    </span>\r\n                </div>\r\n            )}\r\n\r\n            {editMode && (\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import {Field, reduxForm} from 'redux-form';\r\nimport {Input, Textarea} from '../../common/FormsControls/FormsControls';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <button>save</button>\r\n            {props.error && (\r\n                <span className={s.formSummarySubmit}>{props.error}</span>\r\n            )}\r\n            <div className={s.descBlock}>\r\n                <div>\r\n                    <b>Full name</b>:\r\n                    <Field\r\n                        placeholder={'Full name'}\r\n                        name={'fullName'}\r\n                        component={Input}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job</b>:\r\n                    <Field\r\n                        name={'lookingForAJob'}\r\n                        component={Input}\r\n                        type={'checkbox'}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <b>My skills</b>:\r\n                    <Field\r\n                        placeholder={'My skills'}\r\n                        name={'lookingForAJobDescription'}\r\n                        component={Textarea}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <b>About me</b>:\r\n                    <Field\r\n                        placeholder={'About me'}\r\n                        name={'aboutMe'}\r\n                        component={Input}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={s.descBlock}>\r\n                <b>Contacts</b>:\r\n                {Object.keys(props.profile.contacts).map((key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <b>\r\n                                {key}:\r\n                                <Field\r\n                                    placeholder={key}\r\n                                    name={'contacts.' + key}\r\n                                    component={Input}\r\n                                />\r\n                            </b>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(\r\n    ProfileDataForm\r\n);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport photoUser from '../../assets/images/user.png';\r\nimport { useState } from 'react';\r\nimport ProfileDataFormReduxForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />;\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {/*<img src='https://wallpapercave.com/wp/wp2085834.jpg'/>*/}\r\n            </div>\r\n            <div className={s.descBlock}>\r\n                <div>\r\n                    <img\r\n                        src={props.profile.photos.large || photoUser}\r\n                        className={s.mainPhoto}\r\n                    />\r\n                    {props.isOwner && (\r\n                        <input type={'file'} onChange={onMainPhotoSelected} />\r\n                    )}\r\n                </div>\r\n                <div className={s.descBlock}>\r\n                    <ProfileStatusWithHooks\r\n                        status={props.status}\r\n                        updateStatus={props.updateStatus}\r\n                    />\r\n                </div>\r\n\r\n                {editMode ? (\r\n                    <ProfileDataFormReduxForm\r\n                        profile={props.profile}\r\n                        onSubmit={onSubmit}\r\n                        initialValues={props.profile}\r\n                    />\r\n                ) : (\r\n                    <ProfileData\r\n                        profile={props.profile}\r\n                        goToEditMode={() => {\r\n                            setEditMode(true);\r\n                        }}\r\n                        isOwner={props.isOwner}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileInfo;\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div>\r\n            {props.isOwner && (\r\n                <button onClick={props.goToEditMode}>edit</button>\r\n            )}\r\n            <div className={s.descBlock}>\r\n                <div>\r\n                    <b>Full name</b>: {props.profile.fullName}\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job</b>: {props.profile.lookingForAJob ? 'yes' : 'no'}\r\n                </div>\r\n                {props.profile.lookingForAJob && (\r\n                    <div>\r\n                        <b>My skills</b>: {props.profile.lookingForAJobDescription}\r\n                    </div>\r\n                )}\r\n                <div>\r\n                    <b>About me</b>: {props.profile.aboutMe}\r\n                </div>\r\n            </div>\r\n            <div className={s.descBlock}>\r\n                <b>Contacts</b>:{' '}\r\n                {Object.keys(props.profile.contacts).map((key) => {\r\n                    return (\r\n                        <Contact\r\n                            key={key}\r\n                            contactTitle={key}\r\n                            contactValue={props.profile.contacts[key]}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Contact = (props) => {\r\n    return (\r\n        <div>\r\n            <b>{props.contactTitle}</b>: {props.contactValue}\r\n        </div>\r\n    );\r\n};\r\n","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n        <img src='https://w-dog.ru/wallpapers/6/1/464217912085663/kot-ochki-portret.jpg' />\r\n        <div>{props.message}</div>\r\n        <div>\r\n          <span>like {props.likeCount}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n    maxLengthCreator,\r\n    required,\r\n} from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = (props) => {\r\n    let postElements = [...props.post].reverse().map((p) => {\r\n        return (\r\n            <Post\r\n                message={p.message}\r\n                likeCount={p.likeCount}\r\n                id={p.id}\r\n                key={p.id}\r\n            />\r\n        );\r\n    });\r\n\r\n    let addNewPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h1>My post</h1>\r\n            <AddNewPostFormRedux onSubmit={addNewPost} />\r\n            <div className={s.posts}>\r\n                <div>{postElements}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst addNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name='newPostText'\r\n                    placeholder='say hello'\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'addNewPostForm' })(\r\n    addNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        post: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostContainer;\r\n","import ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostContainer from './MyPosts/MyPostContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <main>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                isOwner={props.isOwner}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostContainer />\r\n        </main>\r\n    );\r\n};\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {\r\n    getStatus,\r\n    profileData,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n} from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n        }\r\n        this.props.profileData(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n                saveProfile={this.props.saveProfile}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        profileData,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}